/**
 * Slurm Rest API
 * API to access and control Slurm.
 *
 * The version of the OpenAPI document: 0.0.37
 * Contact: sales@schedmd.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { RequestFile } from './models';

/**
* Association usage
*/
export class Dbv0036AssociationUsage {
    /**
    * Jobs accuring priority
    */
    'accrueJobCount'?: number;
    /**
    * Group used wallclock time (s)
    */
    'groupUsedWallclock'?: number;
    /**
    * Fairshare factor
    */
    'fairshareFactor'?: number;
    /**
    * Fairshare shares
    */
    'fairshareShares'?: number;
    /**
    * Currently active jobs
    */
    'normalizedPriority'?: number;
    /**
    * Normalized shares
    */
    'normalizedShares'?: number;
    /**
    * Effective normalized usage
    */
    'effectiveNormalizedUsage'?: number;
    /**
    * Raw usage
    */
    'rawUsage'?: number;
    /**
    * Total jobs submitted
    */
    'jobCount'?: number;
    /**
    * Fairshare level
    */
    'fairshareLevel'?: number;

    static discriminator: string | undefined = undefined;

    static attributeTypeMap: Array<{name: string, baseName: string, type: string}> = [
        {
            "name": "accrueJobCount",
            "baseName": "accrue_job_count",
            "type": "number"
        },
        {
            "name": "groupUsedWallclock",
            "baseName": "group_used_wallclock",
            "type": "number"
        },
        {
            "name": "fairshareFactor",
            "baseName": "fairshare_factor",
            "type": "number"
        },
        {
            "name": "fairshareShares",
            "baseName": "fairshare_shares",
            "type": "number"
        },
        {
            "name": "normalizedPriority",
            "baseName": "normalized_priority",
            "type": "number"
        },
        {
            "name": "normalizedShares",
            "baseName": "normalized_shares",
            "type": "number"
        },
        {
            "name": "effectiveNormalizedUsage",
            "baseName": "effective_normalized_usage",
            "type": "number"
        },
        {
            "name": "rawUsage",
            "baseName": "raw_usage",
            "type": "number"
        },
        {
            "name": "jobCount",
            "baseName": "job_count",
            "type": "number"
        },
        {
            "name": "fairshareLevel",
            "baseName": "fairshare_level",
            "type": "number"
        }    ];

    static getAttributeTypeMap() {
        return Dbv0036AssociationUsage.attributeTypeMap;
    }
}

